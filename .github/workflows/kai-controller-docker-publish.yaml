name: Kai controller docker publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # verify build on any PR
  pull_request:

env:
  IMAGE_REGISTRY: quay.io
  IMAGE_NAME: kai-controller
  REGISTRY: quay.io/dreamstax

jobs:
  # verify build
  verify-docker-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Verify docker build
        run: |
          make docker-build

  push:
    # Ensure build completes before pushing image.
    needs: verify-docker-build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Quay
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}

      - name: export version variable
        run: |
          IMAGE_ID=$REGISTRY/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION >> $GITHUB_ENV
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV

      - name: Build and push
        run: make docker-buildx IMG=${{ env.IMAGE_ID }}:${{ env.VERSION }}